// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBookingSystem.Data;

#nullable disable

namespace TicketBookingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TicketBookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassengerContact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TicketBookingSystem.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivalCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartureCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasDiscriminator<string>("FlightType").HasValue("Flight");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TicketBookingSystem.Models.BusinessFlight", b =>
                {
                    b.HasBaseType("TicketBookingSystem.Models.Flight");

                    b.HasDiscriminator().HasValue("Business");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            ArrivalCity = "Москва",
                            ArrivalTime = new DateTime(2024, 12, 31, 13, 52, 21, 888, DateTimeKind.Local).AddTicks(8099),
                            AvailableSeats = 50,
                            BasePrice = 10000m,
                            DepartureCity = "Санкт-Петербург",
                            DepartureTime = new DateTime(2024, 12, 31, 11, 52, 21, 888, DateTimeKind.Local).AddTicks(8092),
                            FlightNumber = "BB202",
                            FlightType = "Business",
                            TotalSeats = 50
                        },
                        new
                        {
                            Id = 4,
                            ArrivalCity = "Сочи",
                            ArrivalTime = new DateTime(2025, 1, 2, 14, 52, 21, 888, DateTimeKind.Local).AddTicks(8104),
                            AvailableSeats = 50,
                            BasePrice = 15000m,
                            DepartureCity = "Москва",
                            DepartureTime = new DateTime(2025, 1, 2, 11, 52, 21, 888, DateTimeKind.Local).AddTicks(8103),
                            FlightNumber = "BB203",
                            FlightType = "Business",
                            TotalSeats = 50
                        });
                });

            modelBuilder.Entity("TicketBookingSystem.Models.EconomyFlight", b =>
                {
                    b.HasBaseType("TicketBookingSystem.Models.Flight");

                    b.HasDiscriminator().HasValue("Economy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalCity = "Санкт-Петербург",
                            ArrivalTime = new DateTime(2024, 12, 31, 13, 52, 21, 888, DateTimeKind.Local).AddTicks(546),
                            AvailableSeats = 150,
                            BasePrice = 5000m,
                            DepartureCity = "Москва",
                            DepartureTime = new DateTime(2024, 12, 31, 11, 52, 21, 886, DateTimeKind.Local).AddTicks(4023),
                            FlightNumber = "AA101",
                            FlightType = "Economy",
                            TotalSeats = 150
                        },
                        new
                        {
                            Id = 3,
                            ArrivalCity = "Москва",
                            ArrivalTime = new DateTime(2025, 1, 1, 13, 52, 21, 888, DateTimeKind.Local).AddTicks(1895),
                            AvailableSeats = 150,
                            BasePrice = 4500m,
                            DepartureCity = "Казань",
                            DepartureTime = new DateTime(2025, 1, 1, 11, 52, 21, 888, DateTimeKind.Local).AddTicks(1889),
                            FlightNumber = "AA102",
                            FlightType = "Economy",
                            TotalSeats = 150
                        });
                });

            modelBuilder.Entity("TicketBookingSystem.Models.Booking", b =>
                {
                    b.HasOne("TicketBookingSystem.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });
#pragma warning restore 612, 618
        }
    }
}
